// 4.15.0 0xd3cf4a76
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_ani_01[]; // BITMAP_ANI_01_ID = 0, Size: 158x158 pixels
extern const unsigned char image_ani_02[]; // BITMAP_ANI_02_ID = 1, Size: 158x158 pixels
extern const unsigned char image_ani_03[]; // BITMAP_ANI_03_ID = 2, Size: 158x158 pixels
extern const unsigned char image_ani_04[]; // BITMAP_ANI_04_ID = 3, Size: 158x158 pixels
extern const unsigned char image_ani_05[]; // BITMAP_ANI_05_ID = 4, Size: 158x158 pixels
extern const unsigned char image_ani_06[]; // BITMAP_ANI_06_ID = 5, Size: 158x158 pixels
extern const unsigned char image_ani_07[]; // BITMAP_ANI_07_ID = 6, Size: 158x158 pixels
extern const unsigned char image_ani_08[]; // BITMAP_ANI_08_ID = 7, Size: 158x158 pixels
extern const unsigned char image_ani_09[]; // BITMAP_ANI_09_ID = 8, Size: 158x158 pixels
extern const unsigned char image_ani_10[]; // BITMAP_ANI_10_ID = 9, Size: 158x158 pixels
extern const unsigned char image_ani_11[]; // BITMAP_ANI_11_ID = 10, Size: 158x158 pixels
extern const unsigned char image_ani_12[]; // BITMAP_ANI_12_ID = 11, Size: 158x158 pixels
extern const unsigned char image_ani_13[]; // BITMAP_ANI_13_ID = 12, Size: 158x158 pixels
extern const unsigned char image_ani_14[]; // BITMAP_ANI_14_ID = 13, Size: 158x158 pixels
extern const unsigned char image_bg[]; // BITMAP_BG_ID = 14, Size: 480x272 pixels
extern const unsigned char image_btn[]; // BITMAP_BTN_ID = 15, Size: 130x56 pixels
extern const unsigned char image_btn_pressed[]; // BITMAP_BTN_PRESSED_ID = 16, Size: 130x56 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_ani_01, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_02, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_03, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_04, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_05, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_06, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_07, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_08, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_09, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_10, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_11, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_12, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_13, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_ani_14, 0, 158, 158, 0, 0, 158, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 158, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_bg, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_btn, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_btn_pressed, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
